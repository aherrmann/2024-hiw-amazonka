From f7eb3212371f1f4762d01f846411f977e4a5b077 Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@tweag.io>
Date: Thu, 12 Oct 2023 20:37:59 +0200
Subject: [PATCH 1/2] Accept missing RequestMetadata

The field is marked as option in the protocol definition, therefore a
missing datum should not cause an error.
https://github.com/bazelbuild/bazel/blob/64af6a099fae7569394dd00e3fddeeec8165af6c/third_party/remoteapis/build/bazel/remote/execution/v2/remote_execution.proto#L1868
---
 .../build/lib/remote/util/TracingMetadataUtils.java         | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/src/main/java/com/google/devtools/build/lib/remote/util/TracingMetadataUtils.java b/src/main/java/com/google/devtools/build/lib/remote/util/TracingMetadataUtils.java
index 504a6c7575..892a0387a4 100644
--- a/src/main/java/com/google/devtools/build/lib/remote/util/TracingMetadataUtils.java
+++ b/src/main/java/com/google/devtools/build/lib/remote/util/TracingMetadataUtils.java
@@ -143,11 +143,7 @@ public class TracingMetadataUtils {
         ServerCall<ReqT, RespT> call, Metadata headers, ServerCallHandler<ReqT, RespT> next) {
       RequestMetadata meta = requestMetadataFromHeaders(headers);
       if (meta == null) {
-        throw io.grpc.Status.INVALID_ARGUMENT
-            .withDescription(
-                "RequestMetadata not received from the client for "
-                    + call.getMethodDescriptor().getFullMethodName())
-            .asRuntimeException();
+        meta = RequestMetadata.getDefaultInstance();
       }
       Context ctx = Context.current().withValue(CONTEXT_KEY, meta);
       return Contexts.interceptCall(ctx, call, headers, next);
-- 
2.34.1

